//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MultikinoUserWeb.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class MultikinoEntities : DbContext
    {
        public MultikinoEntities()
            : base("name=MultikinoEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Bilet> Bilet { get; set; }
        public virtual DbSet<Film> Film { get; set; }
        public virtual DbSet<HistoriaBiletow> HistoriaBiletow { get; set; }
        public virtual DbSet<LogZdarzen> LogZdarzen { get; set; }
        public virtual DbSet<Miejsce> Miejsce { get; set; }
        public virtual DbSet<Sala> Sala { get; set; }
        public virtual DbSet<Seans> Seans { get; set; }
        public virtual DbSet<Uzytkownik> Uzytkownik { get; set; }
        public virtual DbSet<v_AktywneSeanse> v_AktywneSeanse { get; set; }
        public virtual DbSet<v_ObecneFilmy> v_ObecneFilmy { get; set; }
        public virtual DbSet<v_SeanseZPrzychodami> v_SeanseZPrzychodami { get; set; }
        public virtual DbSet<v_SprzedazNaFilm> v_SprzedazNaFilm { get; set; }
        public virtual DbSet<v_StatystykaUzytkownikow> v_StatystykaUzytkownikow { get; set; }
        public virtual DbSet<v_ZapelnienieSal> v_ZapelnienieSal { get; set; }
    
        public virtual int sp_DodajFilm(string tytul, string gatunek, string opis, Nullable<int> czasTrwania)
        {
            var tytulParameter = tytul != null ?
                new ObjectParameter("Tytul", tytul) :
                new ObjectParameter("Tytul", typeof(string));
    
            var gatunekParameter = gatunek != null ?
                new ObjectParameter("Gatunek", gatunek) :
                new ObjectParameter("Gatunek", typeof(string));
    
            var opisParameter = opis != null ?
                new ObjectParameter("Opis", opis) :
                new ObjectParameter("Opis", typeof(string));
    
            var czasTrwaniaParameter = czasTrwania.HasValue ?
                new ObjectParameter("CzasTrwania", czasTrwania) :
                new ObjectParameter("CzasTrwania", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_DodajFilm", tytulParameter, gatunekParameter, opisParameter, czasTrwaniaParameter);
        }
    
        public virtual int sp_DodajSeans(Nullable<int> filmId, Nullable<int> salaId, Nullable<System.DateTime> dataSeansu)
        {
            var filmIdParameter = filmId.HasValue ?
                new ObjectParameter("FilmId", filmId) :
                new ObjectParameter("FilmId", typeof(int));
    
            var salaIdParameter = salaId.HasValue ?
                new ObjectParameter("SalaId", salaId) :
                new ObjectParameter("SalaId", typeof(int));
    
            var dataSeansuParameter = dataSeansu.HasValue ?
                new ObjectParameter("DataSeansu", dataSeansu) :
                new ObjectParameter("DataSeansu", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_DodajSeans", filmIdParameter, salaIdParameter, dataSeansuParameter);
        }
    
        public virtual ObjectResult<sp_GenerujRaportDzienny_Result> sp_GenerujRaportDzienny()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GenerujRaportDzienny_Result>("sp_GenerujRaportDzienny");
        }
    
        public virtual ObjectResult<sp_GenerujRaportMiesieczny_Result> sp_GenerujRaportMiesieczny()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GenerujRaportMiesieczny_Result>("sp_GenerujRaportMiesieczny");
        }
    
        public virtual int sp_KupBilet(Nullable<int> seansId, Nullable<int> uzytkownikId, Nullable<decimal> cena, Nullable<System.DateTime> dataZakupu)
        {
            var seansIdParameter = seansId.HasValue ?
                new ObjectParameter("SeansId", seansId) :
                new ObjectParameter("SeansId", typeof(int));
    
            var uzytkownikIdParameter = uzytkownikId.HasValue ?
                new ObjectParameter("UzytkownikId", uzytkownikId) :
                new ObjectParameter("UzytkownikId", typeof(int));
    
            var cenaParameter = cena.HasValue ?
                new ObjectParameter("Cena", cena) :
                new ObjectParameter("Cena", typeof(decimal));
    
            var dataZakupuParameter = dataZakupu.HasValue ?
                new ObjectParameter("DataZakupu", dataZakupu) :
                new ObjectParameter("DataZakupu", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_KupBilet", seansIdParameter, uzytkownikIdParameter, cenaParameter, dataZakupuParameter);
        }
    
        public virtual int sp_UsunSeans(Nullable<int> seansId)
        {
            var seansIdParameter = seansId.HasValue ?
                new ObjectParameter("SeansId", seansId) :
                new ObjectParameter("SeansId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UsunSeans", seansIdParameter);
        }
    
        public virtual int sp_UtworzUzytkownika(string imie, string nazwisko, string email, string haslo, string rola)
        {
            var imieParameter = imie != null ?
                new ObjectParameter("Imie", imie) :
                new ObjectParameter("Imie", typeof(string));
    
            var nazwiskoParameter = nazwisko != null ?
                new ObjectParameter("Nazwisko", nazwisko) :
                new ObjectParameter("Nazwisko", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var hasloParameter = haslo != null ?
                new ObjectParameter("Haslo", haslo) :
                new ObjectParameter("Haslo", typeof(string));
    
            var rolaParameter = rola != null ?
                new ObjectParameter("Rola", rola) :
                new ObjectParameter("Rola", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UtworzUzytkownika", imieParameter, nazwiskoParameter, emailParameter, hasloParameter, rolaParameter);
        }
    
        public virtual int sp_ZmienDaneFilmu(Nullable<int> filmId, string nowyTytul, string nowyGatunek, string nowyOpis, Nullable<int> nowyCzasTrwania)
        {
            var filmIdParameter = filmId.HasValue ?
                new ObjectParameter("FilmId", filmId) :
                new ObjectParameter("FilmId", typeof(int));
    
            var nowyTytulParameter = nowyTytul != null ?
                new ObjectParameter("NowyTytul", nowyTytul) :
                new ObjectParameter("NowyTytul", typeof(string));
    
            var nowyGatunekParameter = nowyGatunek != null ?
                new ObjectParameter("NowyGatunek", nowyGatunek) :
                new ObjectParameter("NowyGatunek", typeof(string));
    
            var nowyOpisParameter = nowyOpis != null ?
                new ObjectParameter("NowyOpis", nowyOpis) :
                new ObjectParameter("NowyOpis", typeof(string));
    
            var nowyCzasTrwaniaParameter = nowyCzasTrwania.HasValue ?
                new ObjectParameter("NowyCzasTrwania", nowyCzasTrwania) :
                new ObjectParameter("NowyCzasTrwania", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ZmienDaneFilmu", filmIdParameter, nowyTytulParameter, nowyGatunekParameter, nowyOpisParameter, nowyCzasTrwaniaParameter);
        }
    
        public virtual int sp_ZmienRoleUzytkownika(Nullable<int> uzytkownikId, string nowaRola)
        {
            var uzytkownikIdParameter = uzytkownikId.HasValue ?
                new ObjectParameter("UzytkownikId", uzytkownikId) :
                new ObjectParameter("UzytkownikId", typeof(int));
    
            var nowaRolaParameter = nowaRola != null ?
                new ObjectParameter("NowaRola", nowaRola) :
                new ObjectParameter("NowaRola", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ZmienRoleUzytkownika", uzytkownikIdParameter, nowaRolaParameter);
        }
    
        public virtual int sp_ZwrocBilet(Nullable<int> biletId)
        {
            var biletIdParameter = biletId.HasValue ?
                new ObjectParameter("BiletId", biletId) :
                new ObjectParameter("BiletId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ZwrocBilet", biletIdParameter);
        }
    }
}
